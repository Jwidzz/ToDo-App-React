{"ast":null,"code":"var _jsxFileName = \"D:\\\\wrk\\\\react-apps\\\\todo\\\\src\\\\components\\\\TasksFilter\\\\TasksFilter.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TasksFilter extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.buttons = [{\n      name: 'all',\n      label: 'All'\n    }, {\n      name: 'active',\n      label: 'Active'\n    }, {\n      name: 'complited',\n      label: 'Complited'\n    }];\n    this.switchFilter = key => {\n      const {\n        onFilter\n      } = this.props;\n      switch (key) {\n        case 'All':\n          onFilter(key);\n          this.setState(() => {\n            return {\n              buttons: {\n                all: true,\n                active: false,\n                complited: false\n              }\n            };\n          });\n          break;\n        case 'Active':\n          onFilter(key);\n          this.setState(({\n            buttons\n          }) => {\n            return {\n              buttons: {\n                all: false,\n                active: true,\n                complited: false\n              }\n            };\n          });\n          break;\n        case 'Completed':\n          onFilter(key);\n          this.setState(({\n            buttons\n          }) => {\n            return {\n              buttons: {\n                all: false,\n                active: false,\n                complited: true\n              }\n            };\n          });\n          break;\n      }\n    };\n  }\n  render() {\n    const {\n      filter,\n      onFilterChange\n    } = this.props;\n    const buttons = this.buttons.map(({\n      name,\n      label\n    }) => {\n      const isActive = filter === name;\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        class: \"filters\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: isActive ? 'selected' : '',\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: isActive ? 'selected' : '',\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: isActive ? 'selected' : '',\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"filters\",\n      children: buttons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }, this);\n  }\n}","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TasksFilter","Component","constructor","args","buttons","name","label","switchFilter","key","onFilter","props","setState","all","active","complited","render","filter","onFilterChange","map","isActive","class","children","type","className","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/wrk/react-apps/todo/src/components/TasksFilter/TasksFilter.js"],"sourcesContent":["import React from 'react';\n\nexport default class TasksFilter extends React.Component {\n  buttons = [\n    {\n      name: 'all',\n      label: 'All',\n    },\n    {\n      name: 'active',\n      label: 'Active',\n    },\n    {\n      name: 'complited',\n      label: 'Complited',\n    },\n  ];\n\n  switchFilter = (key) => {\n    const { onFilter } = this.props;\n    switch (key) {\n      case 'All':\n        onFilter(key);\n        this.setState(() => {\n          return {\n            buttons: { all: true, active: false, complited: false },\n          };\n        });\n        break;\n\n      case 'Active':\n        onFilter(key);\n        this.setState(({ buttons }) => {\n          return {\n            buttons: { all: false, active: true, complited: false },\n          };\n        });\n        break;\n\n      case 'Completed':\n        onFilter(key);\n        this.setState(({ buttons }) => {\n          return {\n            buttons: { all: false, active: false, complited: true },\n          };\n        });\n        break;\n    }\n  };\n\n  render() {\n    const { filter, onFilterChange } = this.props;\n\n    const buttons = this.buttons.map(({ name, label }) => {\n      const isActive = filter === name;\n\n      return (\n        <ul class=\"filters\">\n          <li>\n            <button \n            type=\"button\"\n            className={isActive ? 'selected' : ''}>All</button>\n          </li>\n          <li>\n            <button \n            \n            className={isActive ? 'selected' : ''}>Active</button>\n          </li>\n          <li>\n            <button className={isActive ? 'selected' : ''}>Completed</button>\n          </li>\n        </ul>\n      );\n    });\n    return <ul className=\"filters\">{buttons}</ul>;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}